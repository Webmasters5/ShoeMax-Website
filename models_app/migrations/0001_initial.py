# Generated by Django 5.2.7 on 2025-10-19 09:47

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('website', models.URLField()),
                ('brand_id', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('coupon_id', models.AutoField(primary_key=True, serialize=False)),
                ('promo_code', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('percent_off', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('is_active', models.BooleanField(default=True)),
                ('exp_date', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('admin_id', models.AutoField(primary_key=True, serialize=False)),
                ('role', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='admin_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('customer_id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(max_length=15)),
                ('address', models.TextField()),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customer_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('addr_id', models.AutoField(primary_key=True, serialize=False)),
                ('street', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('zip_code', models.CharField(max_length=20)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('is_default', models.BooleanField(default=False)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='models_app.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('order_id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled')], default='pending', max_length=50)),
                ('date_ordered', models.DateTimeField(auto_now_add=True)),
                ('date_delivered', models.DateTimeField(blank=True, null=True)),
                ('shipping_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('sub_total', models.DecimalField(blank=True, decimal_places=2, max_digits=10)),
                ('discount_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('coupon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='models_app.coupon')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='models_app.customer')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='models_app.order')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('card_id', models.AutoField(primary_key=True, serialize=False)),
                ('card_num', models.CharField(max_length=19)),
                ('exp_date', models.DateField()),
                ('card_type', models.CharField(blank=True, max_length=50)),
                ('holder_name', models.CharField(max_length=100)),
                ('is_default', models.BooleanField(default=False)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_methods', to='models_app.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('review_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('comment', models.TextField()),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('order_item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='review', to='models_app.orderitem')),
            ],
        ),
        migrations.CreateModel(
            name='Shoe',
            fields=[
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('category', models.CharField(choices=[('running', 'Running'), ('casual', 'Casual'), ('formal', 'Formal'), ('sports', 'Sports'), ('sneakers', 'Sneakers'), ('boots', 'Boots'), ('sandals', 'Sandals'), ('loafers', 'Loafers'), ('athletic', 'Athletic')], max_length=50)),
                ('gender', models.CharField(choices=[('M', 'Men'), ('W', 'Women'), ('U', 'Unisex'), ('K', 'Kids')], max_length=10)),
                ('shoe_id', models.AutoField(primary_key=True, serialize=False)),
                ('image_url', models.ImageField(upload_to='shoes/')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shoes', to='models_app.brand')),
            ],
        ),
        migrations.CreateModel(
            name='ShoeVariant',
            fields=[
                ('color', models.CharField(max_length=50)),
                ('size', models.IntegerField(validators=[django.core.validators.MinValueValidator(35), django.core.validators.MaxValueValidator(49)])),
                ('stock', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('sku', models.CharField(blank=True, max_length=100, unique=True)),
                ('variant_id', models.AutoField(primary_key=True, serialize=False)),
                ('shoe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='models_app.shoe')),
            ],
        ),
        migrations.AddField(
            model_name='orderitem',
            name='variant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='models_app.shoevariant'),
        ),
        migrations.AddField(
            model_name='order',
            name='shoe_variants',
            field=models.ManyToManyField(related_name='orders', through='models_app.OrderItem', to='models_app.shoevariant'),
        ),
        migrations.CreateModel(
            name='WishlistItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='models_app.customer')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wishlisted_by', to='models_app.shoevariant')),
            ],
            options={
                'unique_together': {('customer', 'variant')},
            },
        ),
        migrations.AddField(
            model_name='customer',
            name='wishlist_items',
            field=models.ManyToManyField(related_name='wishlisted_by_customers', through='models_app.WishlistItem', to='models_app.shoevariant'),
        ),
        migrations.AlterUniqueTogether(
            name='orderitem',
            unique_together={('order', 'variant')},
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('quantity', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_items', to='models_app.customer')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='in_carts', to='models_app.shoevariant')),
            ],
            options={
                'unique_together': {('customer', 'variant')},
            },
        ),
    ]
